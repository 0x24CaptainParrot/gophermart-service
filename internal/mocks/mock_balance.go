// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/0x24CaptainParrot/gophermart-service/internal/pkg/service (interfaces: Balance)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/0x24CaptainParrot/gophermart-service/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockBalance is a mock of Balance interface.
type MockBalance struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceMockRecorder
}

// MockBalanceMockRecorder is the mock recorder for MockBalance.
type MockBalanceMockRecorder struct {
	mock *MockBalance
}

// NewMockBalance creates a new mock instance.
func NewMockBalance(ctrl *gomock.Controller) *MockBalance {
	mock := &MockBalance{ctrl: ctrl}
	mock.recorder = &MockBalanceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalance) EXPECT() *MockBalanceMockRecorder {
	return m.recorder
}

// DisplayUserBalance mocks base method.
func (m *MockBalance) DisplayUserBalance(arg0 context.Context, arg1 int) (models.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisplayUserBalance", arg0, arg1)
	ret0, _ := ret[0].(models.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisplayUserBalance indicates an expected call of DisplayUserBalance.
func (mr *MockBalanceMockRecorder) DisplayUserBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisplayUserBalance", reflect.TypeOf((*MockBalance)(nil).DisplayUserBalance), arg0, arg1)
}

// DisplayWithdrawals mocks base method.
func (m *MockBalance) DisplayWithdrawals(arg0 context.Context, arg1 int) ([]models.Withdrawal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisplayWithdrawals", arg0, arg1)
	ret0, _ := ret[0].([]models.Withdrawal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisplayWithdrawals indicates an expected call of DisplayWithdrawals.
func (mr *MockBalanceMockRecorder) DisplayWithdrawals(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisplayWithdrawals", reflect.TypeOf((*MockBalance)(nil).DisplayWithdrawals), arg0, arg1)
}

// WithdrawLoyaltyPoints mocks base method.
func (m *MockBalance) WithdrawLoyaltyPoints(arg0 context.Context, arg1 int, arg2 models.WithdrawRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithdrawLoyaltyPoints", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// WithdrawLoyaltyPoints indicates an expected call of WithdrawLoyaltyPoints.
func (mr *MockBalanceMockRecorder) WithdrawLoyaltyPoints(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithdrawLoyaltyPoints", reflect.TypeOf((*MockBalance)(nil).WithdrawLoyaltyPoints), arg0, arg1, arg2)
}
